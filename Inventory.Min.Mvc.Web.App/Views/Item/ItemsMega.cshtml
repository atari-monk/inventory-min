@model Inventory.Min.Mvc.Web.App.Models.ItemsFullVM

@{
    ViewData["Title"] = "All Items";
}

<h1>Items</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName(nameof(ItemVM.Id))
            </th>
            <th>
                @Html.DisplayName(nameof(ItemVM.Name))
            </th>
            <th>
                @Html.DisplayName(nameof(ItemVM.Description))
            </th>
            <th>
                @Html.Raw("Initial<br/>Count")
            </th>
            <th>
                @Html.Raw("Current<br/>Count")
            </th>
            <th>
                @Html.Raw("Category")
            </th>
            <th>
                @Html.Raw("Purchase<br/>Date")
            </th>
            <th>
                @Html.Raw("Currency")
            </th>
            <th>
                @Html.Raw("Purchase<br/>Price")
            </th>
            <th>
                @Html.Raw("Sell<br/>Price")
            </th>
            <th>
                @Html.Raw("Image<br/>Path")
            </th>
            <th>
                @Html.Raw("Length<br/>Unit")
            </th>
            <th>
                @Html.Raw("Length")
            </th>
            <th>
                @Html.Raw("Heigth")
            </th>
            <th>
                @Html.Raw("Depth")
            </th>
            <th>
                @Html.Raw("Diameter")
            </th>
            <th>
                @Html.Raw("Volume<br/>Unit")
            </th>
            <th>
                @Html.Raw("Volume")
            </th>
            <th>
                @Html.Raw("Mass")
            </th>
            <th>
                @Html.Raw("Mass<br/>Unit")
            </th>
            <th>
                @Html.Raw("Tag")
            </th>
            <th>
                @Html.Raw("State")
            </th>
            <th>
                @Html.Raw("Parent")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items!)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InitialCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Categories!.FirstOrDefault(c => c.Id == item.CategoryId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Currencies!.FirstOrDefault(c => c.Id == item.CurrencyId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchasePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SellPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImagePath17)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Units!.FirstOrDefault(c => c.Id == item.LengthUnitId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Heigth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Depth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Diameter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Units!.FirstOrDefault(c => c.Id == item.VolumeUnitId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mass)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Units!.FirstOrDefault(c => c.Id == item.MassUnitId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Tags!.FirstOrDefault(c => c.Id == item.TagId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.States!.FirstOrDefault(c => c.Id == item.StateId)!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentName)
                </td>
                <td>
                    <a asp-action="RelatedMega" asp-route-id="@item.Id">Related</a>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>